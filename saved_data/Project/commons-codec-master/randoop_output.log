================ Randoop Execution =================
Start Time: Fri 14 Mar 2025 21:22:19 AEDT
Number of Classes:      107
Time Budget (seconds): 6420
----------------------------------------------------
Randoop for Java version "4.3.3, local changes, branch master, commit 8f08f5b, 2024-05-02".
21:22:25,289 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
21:22:25,293 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
21:22:25,296 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [jar:file:/Users/dianshuliao/.m2/repository/org/sonatype/plugins/nexus-staging-maven-plugin/1.7.0/nexus-staging-maven-plugin-1.7.0.jar!/logback.xml]
21:22:25,306 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
21:22:25,306 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/Users/dianshuliao/.m2/repository/org/sonatype/plugins/nexus-staging-maven-plugin/1.6.8/nexus-staging-maven-plugin-1.6.8.jar!/logback.xml]
21:22:25,306 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [jar:file:/Users/dianshuliao/.m2/repository/org/sonatype/plugins/nexus-staging-maven-plugin/1.7.0/nexus-staging-maven-plugin-1.7.0.jar!/logback.xml]
21:22:25,327 |-INFO in ch.qos.logback.core.joran.spi.ConfigurationWatchList@3a7704c - URL [jar:file:/Users/dianshuliao/.m2/repository/org/sonatype/plugins/nexus-staging-maven-plugin/1.7.0/nexus-staging-maven-plugin-1.7.0.jar!/logback.xml] is not of type file
21:22:27,092 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
21:22:27,110 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
21:22:27,120 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
21:22:27,307 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
21:22:27,566 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to DEBUG
21:22:27,567 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
21:22:27,568 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
21:22:27,569 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@6754ef00 - Registering current configuration as safe fallback point

[DEBUG] register(BC) not registered - enabled=true, supported=false
[INFO] getOrCreateProvider(EdDSA) created instance of net.i2p.crypto.eddsa.EdDSASecurityProvider
[INFO] No detected/configured IoServiceFactoryFactory using Nio2ServiceFactoryFactory
Cannot instantiate non-accessible class org.apache.commons.codec.net.RFC1522Codec specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.net.Utils specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.digest.Blake3$EngineState specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.digest.Blake3$Output specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.digest.B64 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.digest.Blake3$ChunkState specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.digest.Blake3$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.SoundexUtils specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Rule$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.PhoneticEngine$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder specified via --testclass or --classlist; will use its static methods.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Rule$2 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Lang$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Lang$LangRule specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Languages$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.Languages$2 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.bm.ResourceConstants specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.ColognePhonetic$CologneBuffer specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.ColognePhonetic$CologneOutputBuffer specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.language.DaitchMokotoffSoundex$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.binary.Base32$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.binary.Base64$1 specified via --testclass or --classlist.
Cannot instantiate non-accessible class org.apache.commons.codec.binary.BaseNCodec$Context specified via --testclass or --classlist.

Will try to generate tests for 81 out of 107 classes.
PUBLIC MEMBERS=750
Explorer = ForwardGenerator(steps: 0, null steps: 0, num_sequences_generated: 0;
    allSequences: 0, regresson seqs: 0, error seqs: 0=0=0, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 0;
    sideEffectFreeMethods: 1115, runtimePrimitivesSeen: 38)

Progress update: steps=1, test inputs generated=0, failing inputs=0      (2025-03-14T10:22:36.320Z     24.8M used)
Progress update: steps=534, test inputs generated=396, failing inputs=0      (2025-03-14T10:23:36.596Z     560M used)
Progress update: steps=1000, test inputs generated=802, failing inputs=0      (2025-03-14T10:24:11.376Z     562M used)
Progress update: steps=1344, test inputs generated=1119, failing inputs=1      (2025-03-14T10:24:36.615Z     571M used)
Progress update: steps=2000, test inputs generated=1737, failing inputs=1      (2025-03-14T10:25:06.942Z     1.48G used)
Progress update: steps=2609, test inputs generated=2306, failing inputs=1      (2025-03-14T10:25:36.626Z     813M used)
Progress update: steps=3000, test inputs generated=2671, failing inputs=2      (2025-03-14T10:26:07.730Z     3.40G used)
Progress update: steps=3516, test inputs generated=3142, failing inputs=3      (2025-03-14T10:26:36.644Z     1.10G used)
Progress update: steps=4000, test inputs generated=3582, failing inputs=3      (2025-03-14T10:27:00.644Z     352M used)
Progress update: steps=4319, test inputs generated=3879, failing inputs=3      (2025-03-14T10:27:36.654Z     1.43G used)
Progress update: steps=5000, test inputs generated=4498, failing inputs=4      (2025-03-14T10:28:25.423Z     1.53G used)
Progress update: steps=5160, test inputs generated=4642, failing inputs=4      (2025-03-14T10:28:36.666Z     1.53G used)
Progress update: steps=6000, test inputs generated=5396, failing inputs=5      (2025-03-14T10:29:35.998Z     918M used)
Progress update: steps=6012, test inputs generated=5409, failing inputs=5      (2025-03-14T10:29:36.755Z     1.01G used)
Progress update: steps=6540, test inputs generated=5884, failing inputs=5      (2025-03-14T10:30:36.763Z     2.86G used)Long execution time 24 sec for
java.io.OutputStream outputStream0 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream1 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream0);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream4 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream1, true, false);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream5 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4);
org.apache.commons.codec.binary.Base64OutputStream base64OutputStream6 = new org.apache.commons.codec.binary.Base64OutputStream((java.io.OutputStream)base16OutputStream4);
boolean boolean7 = base16OutputStream4.isStrictDecoding();
org.apache.commons.codec.binary.Base32.Builder builder10 = new org.apache.commons.codec.binary.Base32.Builder();
org.apache.commons.codec.binary.Base32.Builder builder12 = builder10.setPadding((byte)100);
org.apache.commons.codec.binary.Base32.Builder builder14 = builder10.setPadding((byte)0);
byte[] byteArray17 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
char[] charArray18 = org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byteArray17);
org.apache.commons.codec.binary.Base32.Builder builder19 = builder10.setLineSeparator(byteArray17);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream20 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4, false, (-237789309), byteArray17);
org.apache.commons.codec.digest.Blake3 blake3_21 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray17);
byte[] byteArray23 = blake3_21.doFinalize(2131247126);


Progress update: steps=6924, test inputs generated=6235, failing inputs=5      (2025-03-14T10:31:39.985Z     2.72G used)Long execution time 32 sec for
java.util.BitSet bitSet0 = null;
byte[] byteArray2 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str3 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray2);
byte[] byteArray4 = org.apache.commons.codec.net.URLCodec.encodeUrl(bitSet0, byteArray2);
byte[] byteArray6 = org.apache.commons.codec.binary.StringUtils.getBytesUtf8("6156665843a7281afec331f09b0ef309");
java.lang.String str7 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray6);
byte[] byteArray8 = org.apache.commons.codec.digest.HmacUtils.hmacSha256(byteArray2, byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_9 = org.apache.commons.codec.digest.Blake3.initKeyedHash(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_9.reset();
org.apache.commons.codec.digest.Blake3 blake3_11 = blake3_10.reset();
org.apache.commons.codec.digest.Blake3 blake3_12 = blake3_11.reset();
byte[] byteArray15 = org.apache.commons.codec.digest.HmacUtils.hmacSha384("5348412d323234", "$apr1$MAizISPO$3ZF5IN1Lnxvwx9keK/mm/.");
byte[] byteArray17 = org.apache.commons.codec.digest.DigestUtils.sha1("ALL");
byte[] byteArray18 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray15, byteArray17);
java.lang.String str19 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray15);
org.apache.commons.codec.digest.Blake3 blake3_20 = blake3_11.doFinalize(byteArray15);
byte[] byteArray22 = blake3_11.doFinalize(1684701394);


Progress update: steps=7000, test inputs generated=6303, failing inputs=5      (2025-03-14T10:32:14.924Z     3.18G used)
Progress update: steps=7349, test inputs generated=6614, failing inputs=5      (2025-03-14T10:32:55.397Z     2.08G used)
Progress update: steps=7857, test inputs generated=7061, failing inputs=5      (2025-03-14T10:33:55.411Z     3.41G used)Long execution time 13 sec for
java.security.MessageDigest messageDigest0 = org.apache.commons.codec.digest.DigestUtils.getSha256Digest();
byte[] byteArray2 = org.apache.commons.codec.digest.DigestUtils.sha384("94b4f0a60d675c853e1c85455c6255740e62145d049c7d026244b3e99e8ad2587ceceab70ee35820b10a8651f02453e5");
char[] charArray3 = org.apache.commons.codec.binary.Hex.encodeHex(byteArray2);
java.lang.String str4 = org.apache.commons.codec.binary.StringUtils.newStringUtf16Le(byteArray2);
java.security.MessageDigest messageDigest5 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest0, byteArray2);
char[] charArray9 = org.apache.commons.codec.binary.Hex.encodeHex(byteArray2, (-864888325), 346199023, false);


Progress update: steps=8000, test inputs generated=7189, failing inputs=5      (2025-03-14T10:34:05.803Z     3.17G used)Long execution time 12 sec for
java.util.BitSet bitSet0 = null;
byte[] byteArray2 = new byte[] { (byte)1 };
java.lang.String str3 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray2);
java.lang.String str4 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray2);
byte[] byteArray5 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray2);
byte[] byteArray6 = org.apache.commons.codec.digest.DigestUtils.sha(byteArray2);
byte[] byteArray8 = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii("hi!");
java.lang.String str9 = org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byteArray2, byteArray8);
byte[] byteArray11 = org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(bitSet0, byteArray8, true);
org.apache.commons.codec.digest.Blake3 blake3_12 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray11);
org.apache.commons.codec.binary.Base64 base64_13 = new org.apache.commons.codec.binary.Base64();
org.apache.commons.codec.binary.Base64 base64_15 = new org.apache.commons.codec.binary.Base64(0);
byte[] byteArray17 = new byte[] { (byte)1 };
java.lang.String str18 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray17);
boolean boolean20 = base64_15.isInAlphabet(byteArray17, false);
byte[] byteArray21 = base64_13.decode(byteArray17);
char[] charArray23 = org.apache.commons.codec.binary.Hex.encodeHex(byteArray21, false);
org.apache.commons.codec.digest.Blake3 blake3_24 = blake3_12.doFinalize(byteArray21);
byte[] byteArray26 = blake3_24.doFinalize(1364076727);


Progress update: steps=8427, test inputs generated=7577, failing inputs=5      (2025-03-14T10:34:57.229Z     1.93G used)
Progress update: steps=9000, test inputs generated=8097, failing inputs=5      (2025-03-14T10:35:36.381Z     2.56G used)
Progress update: steps=9365, test inputs generated=8422, failing inputs=5      (2025-03-14T10:35:57.238Z     2.92G used)
Progress update: steps=10000, test inputs generated=8988, failing inputs=5      (2025-03-14T10:36:34.140Z     2.40G used)
Progress update: steps=10484, test inputs generated=9410, failing inputs=5      (2025-03-14T10:36:57.246Z     2.15G used)
Progress update: steps=11000, test inputs generated=9855, failing inputs=5      (2025-03-14T10:37:29.006Z     2.19G used)
Progress update: steps=11506, test inputs generated=10297, failing inputs=5      (2025-03-14T10:37:57.254Z     2.31G used)Long execution time 18 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
byte[] byteArray13 = org.apache.commons.codec.digest.HmacUtils.hmacSha384("5348412d323234", "$apr1$MAizISPO$3ZF5IN1Lnxvwx9keK/mm/.");
byte[] byteArray15 = org.apache.commons.codec.digest.DigestUtils.sha1("ALL");
byte[] byteArray16 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray13, byteArray15);
long[] longArray17 = org.apache.commons.codec.digest.MurmurHash3.hash128x64(byteArray15);
org.apache.commons.codec.digest.Blake3 blake3_18 = blake3_3.update(byteArray15);
org.apache.commons.codec.binary.Base32 base32_20 = new org.apache.commons.codec.binary.Base32((byte)1);
boolean boolean22 = base32_20.isInAlphabet((byte)1);
byte[] byteArray29 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str30 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray29);
java.lang.String str31 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray29);
byte[] byteArray32 = org.apache.commons.codec.binary.Base64.decodeBase64(byteArray29);
byte[] byteArray35 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
byte[] byteArray36 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray29, byteArray35);
byte[] byteArray39 = org.apache.commons.codec.digest.HmacUtils.hmacSha512("LRBCNA", "H");
byte[] byteArray40 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray35, byteArray39);
java.lang.Object obj41 = base32_20.decode((java.lang.Object) byteArray35);
org.apache.commons.codec.digest.Blake3 blake3_42 = blake3_3.doFinalize(byteArray35);
org.apache.commons.codec.digest.Blake3 blake3_43 = blake3_42.reset();
byte[] byteArray45 = blake3_42.doFinalize(1754797035);


Progress update: steps=12000, test inputs generated=10740, failing inputs=5      (2025-03-14T10:38:45.855Z     1.21G used)
Progress update: steps=12201, test inputs generated=10915, failing inputs=5      (2025-03-14T10:38:57.260Z     1.49G used)
Progress update: steps=12961, test inputs generated=11581, failing inputs=5      (2025-03-14T10:39:57.269Z     2.77G used)Long execution time 22 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
byte[] byteArray13 = org.apache.commons.codec.digest.HmacUtils.hmacSha384("5348412d323234", "$apr1$MAizISPO$3ZF5IN1Lnxvwx9keK/mm/.");
byte[] byteArray15 = org.apache.commons.codec.digest.DigestUtils.sha1("ALL");
byte[] byteArray16 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray13, byteArray15);
long[] longArray17 = org.apache.commons.codec.digest.MurmurHash3.hash128x64(byteArray15);
org.apache.commons.codec.digest.Blake3 blake3_18 = blake3_3.update(byteArray15);
org.apache.commons.codec.binary.Base32 base32_20 = new org.apache.commons.codec.binary.Base32((byte)1);
boolean boolean22 = base32_20.isInAlphabet((byte)1);
byte[] byteArray29 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str30 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray29);
java.lang.String str31 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray29);
byte[] byteArray32 = org.apache.commons.codec.binary.Base64.decodeBase64(byteArray29);
byte[] byteArray35 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
byte[] byteArray36 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray29, byteArray35);
byte[] byteArray39 = org.apache.commons.codec.digest.HmacUtils.hmacSha512("LRBCNA", "H");
byte[] byteArray40 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray35, byteArray39);
java.lang.Object obj41 = base32_20.decode((java.lang.Object) byteArray35);
org.apache.commons.codec.digest.Blake3 blake3_42 = blake3_3.doFinalize(byteArray35);
org.apache.commons.codec.digest.Blake3 blake3_43 = blake3_3.reset();
byte[] byteArray45 = blake3_3.doFinalize(1927331764);


Progress update: steps=13000, test inputs generated=11614, failing inputs=5      (2025-03-14T10:40:04.567Z     3.57G used)Long generation time 1779 msec (= 1769 + 10) for
org.apache.commons.codec.language.bm.NameType nameType0 = org.apache.commons.codec.language.bm.NameType.ASHKENAZI;
org.apache.commons.codec.language.bm.NameType nameType1 = null;
org.apache.commons.codec.language.bm.RuleType ruleType2 = org.apache.commons.codec.language.bm.RuleType.EXACT;
org.apache.commons.codec.language.bm.PhoneticEngine phoneticEngine5 = new org.apache.commons.codec.language.bm.PhoneticEngine(nameType1, ruleType2, false, (-1318110126));
int int6 = phoneticEngine5.getMaxPhonemes();
org.apache.commons.codec.language.bm.NameType nameType7 = phoneticEngine5.getNameType();
org.apache.commons.codec.language.bm.RuleType ruleType8 = phoneticEngine5.getRuleType();
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet9 = org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES;
java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>> strMap10 = org.apache.commons.codec.language.bm.Rule.getInstanceMap(nameType0, ruleType8, languageSet9);
org.apache.commons.codec.language.bm.BeiderMorseEncoder beiderMorseEncoder11 = new org.apache.commons.codec.language.bm.BeiderMorseEncoder();
beiderMorseEncoder11.setConcat(true);
org.apache.commons.codec.language.bm.NameType nameType14 = beiderMorseEncoder11.getNameType();
org.apache.commons.codec.language.bm.RuleType ruleType15 = beiderMorseEncoder11.getRuleType();
org.apache.commons.codec.language.bm.RuleType ruleType16 = beiderMorseEncoder11.getRuleType();
org.apache.commons.codec.language.bm.NameType nameType19 = org.apache.commons.codec.language.bm.NameType.GENERIC;
org.apache.commons.codec.language.bm.NameType nameType20 = null;
org.apache.commons.codec.language.bm.RuleType ruleType21 = org.apache.commons.codec.language.bm.RuleType.EXACT;
org.apache.commons.codec.language.bm.PhoneticEngine phoneticEngine24 = new org.apache.commons.codec.language.bm.PhoneticEngine(nameType20, ruleType21, false, (-1318110126));
int int25 = phoneticEngine24.getMaxPhonemes();
org.apache.commons.codec.language.bm.RuleType ruleType26 = phoneticEngine24.getRuleType();
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet27 = org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE;
java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>> strMap28 = org.apache.commons.codec.language.bm.Rule.getInstanceMap(nameType19, ruleType26, languageSet27);
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet29 = org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE;
boolean boolean31 = languageSet29.contains("401ae5577b62ad77472b254df13126b7122c1f20e2eedf6ed4a8a21c41fe195c");
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet32 = languageSet27.restrictTo(languageSet29);
org.apache.commons.codec.language.bm.Rule.Phoneme phoneme33 = new org.apache.commons.codec.language.bm.Rule.Phoneme((java.lang.CharSequence)"fa6e661928ad972ed5f53dad7f5af1ab3431eea3445349f19685e0c58e87b4c14f67fb34f7c299873919666f60d4bae3a15d869a8cdb651ba6e88690135f71c2", languageSet27);
org.apache.commons.codec.language.bm.Rule.Phoneme phoneme34 = new org.apache.commons.codec.language.bm.Rule.Phoneme((java.lang.CharSequence)"$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/", languageSet27);
java.util.List<org.apache.commons.codec.language.bm.Rule> ruleList35 = org.apache.commons.codec.language.bm.Rule.getInstance(nameType0, ruleType16, languageSet27);
org.apache.commons.codec.language.bm.NameType nameType36 = org.apache.commons.codec.language.bm.NameType.ASHKENAZI;
org.apache.commons.codec.language.bm.NameType nameType37 = null;
org.apache.commons.codec.language.bm.RuleType ruleType38 = org.apache.commons.codec.language.bm.RuleType.EXACT;
org.apache.commons.codec.language.bm.PhoneticEngine phoneticEngine41 = new org.apache.commons.codec.language.bm.PhoneticEngine(nameType37, ruleType38, false, (-1318110126));
int int42 = phoneticEngine41.getMaxPhonemes();
org.apache.commons.codec.language.bm.NameType nameType43 = phoneticEngine41.getNameType();
org.apache.commons.codec.language.bm.RuleType ruleType44 = phoneticEngine41.getRuleType();
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet45 = org.apache.commons.codec.language.bm.Languages.NO_LANGUAGES;
java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>> strMap46 = org.apache.commons.codec.language.bm.Rule.getInstanceMap(nameType36, ruleType44, languageSet45);
org.apache.commons.codec.language.bm.BeiderMorseEncoder beiderMorseEncoder47 = new org.apache.commons.codec.language.bm.BeiderMorseEncoder();
beiderMorseEncoder47.setConcat(true);
org.apache.commons.codec.language.bm.NameType nameType50 = beiderMorseEncoder47.getNameType();
org.apache.commons.codec.language.bm.RuleType ruleType51 = beiderMorseEncoder47.getRuleType();
org.apache.commons.codec.language.bm.RuleType ruleType52 = beiderMorseEncoder47.getRuleType();
org.apache.commons.codec.language.bm.NameType nameType55 = org.apache.commons.codec.language.bm.NameType.GENERIC;
org.apache.commons.codec.language.bm.NameType nameType56 = null;
org.apache.commons.codec.language.bm.RuleType ruleType57 = org.apache.commons.codec.language.bm.RuleType.EXACT;
org.apache.commons.codec.language.bm.PhoneticEngine phoneticEngine60 = new org.apache.commons.codec.language.bm.PhoneticEngine(nameType56, ruleType57, false, (-1318110126));
int int61 = phoneticEngine60.getMaxPhonemes();
org.apache.commons.codec.language.bm.RuleType ruleType62 = phoneticEngine60.getRuleType();
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet63 = org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE;
java.util.Map<java.lang.String,java.util.List<org.apache.commons.codec.language.bm.Rule>> strMap64 = org.apache.commons.codec.language.bm.Rule.getInstanceMap(nameType55, ruleType62, languageSet63);
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet65 = org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE;
boolean boolean67 = languageSet65.contains("401ae5577b62ad77472b254df13126b7122c1f20e2eedf6ed4a8a21c41fe195c");
org.apache.commons.codec.language.bm.Languages.LanguageSet languageSet68 = languageSet63.restrictTo(languageSet65);
org.apache.commons.codec.language.bm.Rule.Phoneme phoneme69 = new org.apache.commons.codec.language.bm.Rule.Phoneme((java.lang.CharSequence)"fa6e661928ad972ed5f53dad7f5af1ab3431eea3445349f19685e0c58e87b4c14f67fb34f7c299873919666f60d4bae3a15d869a8cdb651ba6e88690135f71c2", languageSet63);
org.apache.commons.codec.language.bm.Rule.Phoneme phoneme70 = new org.apache.commons.codec.language.bm.Rule.Phoneme((java.lang.CharSequence)"$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/", languageSet63);
java.util.List<org.apache.commons.codec.language.bm.Rule> ruleList71 = org.apache.commons.codec.language.bm.Rule.getInstance(nameType36, ruleType52, languageSet63);
org.apache.commons.codec.language.bm.PhoneticEngine phoneticEngine73 = new org.apache.commons.codec.language.bm.PhoneticEngine(nameType0, ruleType52, true);
org.apache.commons.codec.language.bm.Lang lang74 = org.apache.commons.codec.language.bm.Lang.instance(nameType0);
java.lang.String str76 = lang74.guessLanguage("bJuLF6G6Mwcnc");


Progress update: steps=13684, test inputs generated=12222, failing inputs=5      (2025-03-14T10:41:01.323Z     1.53G used)
Progress update: steps=14000, test inputs generated=12490, failing inputs=5      (2025-03-14T10:41:26.311Z     2.27G used)Long generation time 1282 msec (= 1273 + 8) for
int int1 = org.apache.commons.codec.digest.MurmurHash3.hash32("WqvmddakVegf2");


Progress update: steps=14451, test inputs generated=12881, failing inputs=5      (2025-03-14T10:42:01.330Z     3.01G used)
Progress update: steps=14879, test inputs generated=13257, failing inputs=5      (2025-03-14T10:43:01.449Z     3.12G used)Long execution time 28 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
byte[] byteArray12 = new byte[] { (byte)1 };
java.lang.String str13 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray12);
org.apache.commons.codec.digest.Blake3 blake3_14 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray12);
byte[] byteArray17 = new byte[] { (byte)1 };
java.lang.String str18 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray17);
org.apache.commons.codec.binary.Base64 base64_20 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray17, true);
org.apache.commons.codec.digest.Blake3 blake3_21 = blake3_14.doFinalize(byteArray17);
byte[] byteArray24 = org.apache.commons.codec.digest.HmacUtils.hmacSha384("5348412d323234", "$apr1$MAizISPO$3ZF5IN1Lnxvwx9keK/mm/.");
byte[] byteArray26 = org.apache.commons.codec.digest.DigestUtils.sha1("ALL");
byte[] byteArray27 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray24, byteArray26);
long[] longArray28 = org.apache.commons.codec.digest.MurmurHash3.hash128x64(byteArray26);
org.apache.commons.codec.digest.Blake3 blake3_29 = blake3_14.update(byteArray26);
org.apache.commons.codec.digest.Blake3 blake3_30 = blake3_10.doFinalize(byteArray26);
org.apache.commons.codec.digest.Blake3 blake3_31 = blake3_10.reset();
byte[] byteArray33 = blake3_31.doFinalize(2005032885);


Progress update: steps=15000, test inputs generated=13363, failing inputs=5      (2025-03-14T10:43:25.367Z     3.81G used)
Progress update: steps=15516, test inputs generated=13809, failing inputs=5      (2025-03-14T10:44:07.953Z     1.52G used)Long execution time 10 sec for
org.apache.commons.codec.binary.Base64.Builder builder0 = new org.apache.commons.codec.binary.Base64.Builder();
org.apache.commons.codec.binary.Base64.Builder builder2 = builder0.setUrlSafe(false);
org.apache.commons.codec.binary.Base64.Builder builder4 = builder2.setPadding((byte)1);
byte[] byteArray6 = org.apache.commons.codec.digest.DigestUtils.sha1("b5c5e39a19f7206f208c34d3e957e17ead47a3de092913db08e4a67a2a5f96e82a3be901b29640f6a90cfe3e489a5abfb744adba33d6d3f1e09d5cb8fdd00f98");
org.apache.commons.codec.binary.Base64.Builder builder7 = builder2.setEncodeTable(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_8 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray6);
byte[] byteArray10 = blake3_8.doFinalize(1351906500);

Long generation time 1092 msec (= 1089 + 3) for
org.apache.commons.codec.net.URLCodec uRLCodec1 = new org.apache.commons.codec.net.URLCodec("3d3031");


Progress update: steps=16000, test inputs generated=14236, failing inputs=5      (2025-03-14T10:44:44.389Z     730M used)
Progress update: steps=16356, test inputs generated=14550, failing inputs=5      (2025-03-14T10:45:07.963Z     1.45G used)
Progress update: steps=17000, test inputs generated=15101, failing inputs=5      (2025-03-14T10:46:07.344Z     905M used)
Progress update: steps=17013, test inputs generated=15113, failing inputs=5      (2025-03-14T10:46:07.971Z     999M used)Long execution time 18 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_11 = blake3_10.reset();
byte[] byteArray13 = blake3_10.doFinalize(2078925837);


Progress update: steps=17575, test inputs generated=15607, failing inputs=5      (2025-03-14T10:47:07.976Z     3.94G used)
Progress update: steps=18000, test inputs generated=15974, failing inputs=5      (2025-03-14T10:47:31.864Z     2.60G used)
Progress update: steps=18683, test inputs generated=16582, failing inputs=5      (2025-03-14T10:48:07.992Z     1.05G used)
Progress update: steps=19000, test inputs generated=16856, failing inputs=5      (2025-03-14T10:48:24.115Z     966M used)
Progress update: steps=19564, test inputs generated=17341, failing inputs=5      (2025-03-14T10:49:08.006Z     688M used)
Progress update: steps=20000, test inputs generated=17720, failing inputs=5      (2025-03-14T10:49:37.564Z     539M used)
Progress update: steps=20425, test inputs generated=18078, failing inputs=5      (2025-03-14T10:50:08.024Z     1.53G used)
Progress update: steps=21000, test inputs generated=18584, failing inputs=5      (2025-03-14T10:50:50.817Z     1.01G used)
Progress update: steps=21206, test inputs generated=18757, failing inputs=5      (2025-03-14T10:51:08.032Z     2.40G used)
Progress update: steps=21925, test inputs generated=19375, failing inputs=5      (2025-03-14T10:52:10.530Z     2.81G used)
Progress update: steps=22000, test inputs generated=19439, failing inputs=5      (2025-03-14T10:52:14.692Z     3.53G used)
Progress update: steps=22886, test inputs generated=20209, failing inputs=5      (2025-03-14T10:53:10.544Z     1.66G used)
Progress update: steps=23000, test inputs generated=20307, failing inputs=5      (2025-03-14T10:53:17.715Z     1.26G used)
Progress update: steps=23761, test inputs generated=20970, failing inputs=5      (2025-03-14T10:54:10.558Z     1.98G used)
Progress update: steps=24000, test inputs generated=21170, failing inputs=5      (2025-03-14T10:54:23.262Z     1.06G used)
Progress update: steps=24876, test inputs generated=21925, failing inputs=5      (2025-03-14T10:55:10.566Z     980M used)
Progress update: steps=25000, test inputs generated=22026, failing inputs=5      (2025-03-14T10:55:17.772Z     626M used)
Progress update: steps=25790, test inputs generated=22693, failing inputs=5      (2025-03-14T10:56:10.607Z     2.11G used)
Progress update: steps=26000, test inputs generated=22870, failing inputs=5      (2025-03-14T10:56:25.680Z     2.60G used)Long execution time 18 sec for
java.io.OutputStream outputStream0 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream1 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream0);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream4 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream1, true, false);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream5 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4);
org.apache.commons.codec.binary.Base64OutputStream base64OutputStream6 = new org.apache.commons.codec.binary.Base64OutputStream((java.io.OutputStream)base16OutputStream4);
boolean boolean7 = base16OutputStream4.isStrictDecoding();
org.apache.commons.codec.binary.Base32.Builder builder10 = new org.apache.commons.codec.binary.Base32.Builder();
org.apache.commons.codec.binary.Base32.Builder builder12 = builder10.setPadding((byte)100);
org.apache.commons.codec.binary.Base32.Builder builder14 = builder10.setPadding((byte)0);
byte[] byteArray17 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
char[] charArray18 = org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byteArray17);
org.apache.commons.codec.binary.Base32.Builder builder19 = builder10.setLineSeparator(byteArray17);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream20 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4, false, (-237789309), byteArray17);
org.apache.commons.codec.digest.Blake3 blake3_21 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray17);
org.apache.commons.codec.net.URLCodec uRLCodec23 = new org.apache.commons.codec.net.URLCodec("SHA-512/256");
java.lang.String str24 = uRLCodec23.getDefaultCharset();
java.lang.String str25 = uRLCodec23.getDefaultCharset();
java.lang.String str26 = uRLCodec23.getDefaultCharset();
java.lang.String str27 = uRLCodec23.getDefaultCharset();
org.apache.commons.codec.digest.HmacAlgorithms hmacAlgorithms28 = org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_224;
byte[] byteArray30 = new byte[] { (byte)1 };
java.lang.String str31 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray30);
java.lang.String str32 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray30);
java.math.BigInteger bigInteger33 = org.apache.commons.codec.binary.Base64.decodeInteger(byteArray30);
org.apache.commons.codec.digest.HmacUtils hmacUtils34 = new org.apache.commons.codec.digest.HmacUtils(hmacAlgorithms28, byteArray30);
byte[] byteArray35 = uRLCodec23.encode(byteArray30);
org.apache.commons.codec.digest.Blake3 blake3_36 = blake3_21.doFinalize(byteArray35);
java.util.BitSet bitSet37 = null;
byte[] byteArray39 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str40 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray39);
byte[] byteArray41 = org.apache.commons.codec.net.URLCodec.encodeUrl(bitSet37, byteArray39);
byte[] byteArray43 = org.apache.commons.codec.binary.StringUtils.getBytesUtf8("6156665843a7281afec331f09b0ef309");
java.lang.String str44 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray43);
byte[] byteArray45 = org.apache.commons.codec.digest.HmacUtils.hmacSha256(byteArray39, byteArray43);
byte[] byteArray47 = new byte[] { (byte)1 };
java.lang.String str48 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray47);
java.lang.String str49 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray47);
byte[] byteArray50 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray47);
byte[] byteArray51 = org.apache.commons.codec.digest.DigestUtils.sha(byteArray47);
byte[] byteArray53 = org.apache.commons.codec.binary.StringUtils.getBytesUsAscii("hi!");
java.lang.String str54 = org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byteArray47, byteArray53);
javax.crypto.Mac mac55 = org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byteArray53);
javax.crypto.Mac mac57 = org.apache.commons.codec.digest.HmacUtils.updateHmac(mac55, "UTF-16");
byte[] byteArray59 = new byte[] { (byte)1 };
java.lang.String str60 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray59);
java.lang.String str61 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray59);
byte[] byteArray62 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray59);
byte[] byteArray63 = org.apache.commons.codec.digest.DigestUtils.sha(byteArray59);
javax.crypto.Mac mac64 = org.apache.commons.codec.digest.HmacUtils.updateHmac(mac55, byteArray63);
byte[] byteArray65 = org.apache.commons.codec.digest.HmacUtils.hmacSha1(byteArray45, byteArray63);
org.apache.commons.codec.digest.Blake3 blake3_66 = blake3_21.doFinalize(byteArray45);
org.apache.commons.codec.digest.Blake3 blake3_67 = blake3_66.reset();
org.apache.commons.codec.digest.HmacAlgorithms hmacAlgorithms68 = org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_224;
org.apache.commons.codec.digest.HmacUtils hmacUtils70 = new org.apache.commons.codec.digest.HmacUtils(hmacAlgorithms68, "AQ==");
org.apache.commons.codec.binary.Base64 base64_72 = new org.apache.commons.codec.binary.Base64(0);
byte[] byteArray74 = new byte[] { (byte)1 };
java.lang.String str75 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray74);
boolean boolean77 = base64_72.isInAlphabet(byteArray74, false);
byte[] byteArray79 = new byte[] { (byte)1 };
java.lang.String str80 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray79);
java.lang.String str81 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray79);
java.lang.String str82 = org.apache.commons.codec.digest.DigestUtils.sha384Hex(byteArray79);
byte[] byteArray83 = base64_72.encode(byteArray79);
java.lang.String str84 = hmacUtils70.hmacHex(byteArray79);
byte[] byteArray86 = hmacUtils70.hmac("92d5cfb18f63edbbccdc2b203017f006");
byte[] byteArray88 = new byte[] { (byte)1 };
java.lang.String str89 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray88);
java.lang.String str90 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray88);
boolean boolean91 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray88);
byte[] byteArray92 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray88);
byte[] byteArray93 = hmacUtils70.hmac(byteArray88);
java.lang.String str94 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray93);
org.apache.commons.codec.digest.Blake3 blake3_95 = blake3_67.update(byteArray93);
byte[] byteArray97 = blake3_95.doFinalize(1798956157);


Progress update: steps=26418, test inputs generated=23218, failing inputs=5      (2025-03-14T10:57:10.614Z     2.32G used)
Progress update: steps=27000, test inputs generated=23724, failing inputs=5      (2025-03-14T10:57:44.992Z     812M used)Long execution time 16 sec for
java.util.BitSet bitSet0 = null;
byte[] byteArray2 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str3 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray2);
byte[] byteArray4 = org.apache.commons.codec.net.URLCodec.encodeUrl(bitSet0, byteArray2);
byte[] byteArray6 = org.apache.commons.codec.binary.StringUtils.getBytesUtf8("6156665843a7281afec331f09b0ef309");
java.lang.String str7 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray6);
byte[] byteArray8 = org.apache.commons.codec.digest.HmacUtils.hmacSha256(byteArray2, byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_9 = org.apache.commons.codec.digest.Blake3.initKeyedHash(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_9.reset();
org.apache.commons.codec.digest.Blake3 blake3_11 = blake3_10.reset();
org.apache.commons.codec.digest.Blake3 blake3_12 = blake3_11.reset();
byte[] byteArray14 = blake3_11.doFinalize((int) (short)100);
org.apache.commons.codec.binary.Base32.Builder builder15 = new org.apache.commons.codec.binary.Base32.Builder();
byte[] byteArray17 = org.apache.commons.codec.digest.DigestUtils.sha512("$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/");
boolean boolean18 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray17);
byte[] byteArray19 = org.apache.commons.codec.digest.Blake3.hash(byteArray17);
org.apache.commons.codec.binary.Base32.Builder builder20 = builder15.setEncodeTable(byteArray19);
org.apache.commons.codec.binary.Base32.Builder builder22 = builder20.setPadding((byte)0);
byte[] byteArray24 = new byte[] { (byte)1 };
java.lang.String str25 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray24);
java.lang.String str26 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray24);
byte[] byteArray27 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray24);
byte[] byteArray30 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray27, false, true);
org.apache.commons.codec.binary.Base32.Builder builder31 = builder22.setEncodeTable(byteArray27);
byte[] byteArray32 = org.apache.commons.codec.binary.BaseNCodec.getChunkSeparator();
byte[] byteArray33 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray32);
org.apache.commons.codec.binary.Base32.Builder builder34 = builder31.setLineSeparator(byteArray32);
byte[] byteArray41 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str42 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray41);
java.lang.String str43 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray41);
byte[] byteArray44 = org.apache.commons.codec.binary.Base64.decodeBase64(byteArray41);
java.lang.String str45 = org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byteArray32, byteArray41);
byte[] byteArray48 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray41, true, true);
byte[] byteArray51 = org.apache.commons.codec.digest.HmacUtils.hmacSha512("30569d8fc50f9240b115fb797633584a76ec170f086dba7e27d720e411baef61106a54d9063ea7d0595ecf441913aa1b85602e6f89755e4ee6b3b27fc9c579d0", "af483febd5344b0fb0a69ad4a8018a69f306a1654ddfccc357701084bea61c755e44a074b751929cfe300da19c457f6bbc3d4bfc2c98632e1c7c59094242b569");
java.lang.String str52 = org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byteArray41, byteArray51);
org.apache.commons.codec.digest.Blake3 blake3_53 = blake3_11.doFinalize(byteArray41);
byte[] byteArray55 = blake3_53.doFinalize(2126085744);


Progress update: steps=27078, test inputs generated=23789, failing inputs=5      (2025-03-14T10:58:10.624Z     2.37G used)
Progress update: steps=27986, test inputs generated=24581, failing inputs=5      (2025-03-14T10:59:11.112Z     2.31G used)
Progress update: steps=28000, test inputs generated=24593, failing inputs=5      (2025-03-14T10:59:11.673Z     2.43G used)
Progress update: steps=29000, test inputs generated=25440, failing inputs=5      (2025-03-14T10:59:46.682Z     3.41G used)
Progress update: steps=29035, test inputs generated=25468, failing inputs=5      (2025-03-14T11:00:11.121Z     3.48G used)Long execution time 23 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_11 = blake3_10.reset();
byte[] byteArray13 = blake3_10.doFinalize(2019116264);

Long generation time 1783 msec (= 1779 + 4) for
java.io.InputStream inputStream0 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream2 = new org.apache.commons.codec.binary.Base16InputStream(inputStream0, false);
java.security.MessageDigest messageDigest6 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils7 = new org.apache.commons.codec.digest.DigestUtils(messageDigest6);
java.security.MessageDigest messageDigest8 = digestUtils7.getMessageDigest();
java.security.MessageDigest messageDigest9 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest8);
byte[] byteArray12 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest13 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest8, byteArray12);
org.apache.commons.codec.CodecPolicy codecPolicy14 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream15 = new org.apache.commons.codec.binary.Base32InputStream(inputStream0, false, 0, byteArray12, codecPolicy14);
org.apache.commons.codec.binary.Base16InputStream base16InputStream16 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15);
java.io.InputStream inputStream19 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream21 = new org.apache.commons.codec.binary.Base16InputStream(inputStream19, false);
org.apache.commons.codec.binary.Base32InputStream base32InputStream22 = new org.apache.commons.codec.binary.Base32InputStream(inputStream19);
boolean boolean23 = base32InputStream22.markSupported();
org.apache.commons.codec.CodecPolicy codecPolicy26 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base16InputStream base16InputStream27 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream22, false, false, codecPolicy26);
org.apache.commons.codec.binary.Base16InputStream base16InputStream28 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15, false, false, codecPolicy26);
org.apache.commons.codec.binary.Base16InputStream base16InputStream30 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15, false);
org.apache.commons.codec.binary.Base64InputStream base64InputStream31 = new org.apache.commons.codec.binary.Base64InputStream((java.io.InputStream)base16InputStream30);
org.apache.commons.codec.binary.Base16InputStream base16InputStream34 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base64InputStream31, false, true);
org.apache.commons.codec.binary.Base64InputStream base64InputStream36 = new org.apache.commons.codec.binary.Base64InputStream((java.io.InputStream)base16InputStream34, false);
org.apache.commons.codec.binary.Base16InputStream base16InputStream39 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base16InputStream34, false, true);
boolean boolean40 = base16InputStream34.markSupported();


Progress update: steps=29997, test inputs generated=26297, failing inputs=5      (2025-03-14T11:01:11.355Z     2.38G used)
Progress update: steps=30000, test inputs generated=26299, failing inputs=5      (2025-03-14T11:01:11.497Z     2.42G used)
Progress update: steps=30622, test inputs generated=26830, failing inputs=5      (2025-03-14T11:02:11.369Z     3.33G used)
Progress update: steps=31000, test inputs generated=27152, failing inputs=5      (2025-03-14T11:02:44.566Z     3.36G used)
Progress update: steps=31357, test inputs generated=27469, failing inputs=5      (2025-03-14T11:03:11.659Z     3.24G used)Long execution time 13 sec for
java.io.OutputStream outputStream0 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream1 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream0);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream4 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream1, true, false);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream5 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4);
org.apache.commons.codec.binary.Base64OutputStream base64OutputStream6 = new org.apache.commons.codec.binary.Base64OutputStream((java.io.OutputStream)base16OutputStream4);
boolean boolean7 = base16OutputStream4.isStrictDecoding();
org.apache.commons.codec.binary.Base32.Builder builder10 = new org.apache.commons.codec.binary.Base32.Builder();
org.apache.commons.codec.binary.Base32.Builder builder12 = builder10.setPadding((byte)100);
org.apache.commons.codec.binary.Base32.Builder builder14 = builder10.setPadding((byte)0);
byte[] byteArray17 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
char[] charArray18 = org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byteArray17);
org.apache.commons.codec.binary.Base32.Builder builder19 = builder10.setLineSeparator(byteArray17);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream20 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream4, false, (-237789309), byteArray17);
org.apache.commons.codec.digest.Blake3 blake3_21 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray17);
byte[] byteArray23 = blake3_21.doFinalize(1341232745);


Progress update: steps=31751, test inputs generated=27802, failing inputs=5      (2025-03-14T11:04:11.692Z     3.43G used)
Progress update: steps=32000, test inputs generated=28016, failing inputs=5      (2025-03-14T11:04:47.942Z     3.34G used)
Progress update: steps=32234, test inputs generated=28222, failing inputs=5      (2025-03-14T11:05:11.702Z     3.26G used)
Progress update: steps=32625, test inputs generated=28561, failing inputs=5      (2025-03-14T11:06:11.715Z     3.72G used)
Progress update: steps=33000, test inputs generated=28872, failing inputs=5      (2025-03-14T11:07:07.038Z     3.45G used)
Progress update: steps=33045, test inputs generated=28907, failing inputs=5      (2025-03-14T11:07:12.074Z     3.27G used)
Progress update: steps=33608, test inputs generated=29375, failing inputs=5      (2025-03-14T11:08:12.110Z     3.27G used)
Progress update: steps=34000, test inputs generated=29716, failing inputs=5      (2025-03-14T11:08:41.163Z     3.33G used)
Progress update: steps=34309, test inputs generated=29983, failing inputs=5      (2025-03-14T11:09:12.147Z     3.29G used)Long generation time 1773 msec (= 1768 + 4) for
org.apache.commons.codec.language.Metaphone metaphone0 = new org.apache.commons.codec.language.Metaphone();
boolean boolean3 = metaphone0.isMetaphoneEqual("", "8d2ce87d86f55fcfab770a047b090da23270fa206832dfea7e0c946fff451f819add242374be551b0d6318ed6c7d41d8");
java.lang.String str5 = metaphone0.metaphone("94b4f0a60d675c853e1c85455c6255740e62145d049c7d026244b3e99e8ad2587ceceab70ee35820b10a8651f02453e5");
int int6 = metaphone0.getMaxCodeLen();
byte[] byteArray8 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str9 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray8);
java.lang.Object obj10 = metaphone0.encode((java.lang.Object) str9);
org.apache.commons.codec.language.Soundex soundex11 = org.apache.commons.codec.language.Soundex.US_ENGLISH_GENEALOGY;
java.lang.String str13 = soundex11.soundex("07Js7N.eEhbgs");
java.lang.Object obj14 = metaphone0.encode((java.lang.Object) "07Js7N.eEhbgs");
boolean boolean17 = metaphone0.isMetaphoneEqual("$1$K4WnX6wd$xy9.V8FMEjDT1QluvccRL0", "UTF-16BE");
java.lang.String str19 = metaphone0.encode("01741134385335");
java.lang.String str21 = metaphone0.metaphone("$6$7yQYLjDY$r/NSYGYTESjqUr6ys6VDfJwT6mjRD3eg1MoyK1L7Ip28ICc3Me.CnrY3TZz068onllbg1wJZ9Hvvu9HsgBRlC1");

Long generation time 1116 msec (= 1115 + 1) for
java.io.InputStream inputStream0 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream2 = new org.apache.commons.codec.binary.Base16InputStream(inputStream0, false);
java.security.MessageDigest messageDigest6 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils7 = new org.apache.commons.codec.digest.DigestUtils(messageDigest6);
java.security.MessageDigest messageDigest8 = digestUtils7.getMessageDigest();
java.security.MessageDigest messageDigest9 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest8);
byte[] byteArray12 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest13 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest8, byteArray12);
org.apache.commons.codec.CodecPolicy codecPolicy14 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream15 = new org.apache.commons.codec.binary.Base32InputStream(inputStream0, false, 0, byteArray12, codecPolicy14);
org.apache.commons.codec.binary.Base16InputStream base16InputStream16 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15);
java.io.InputStream inputStream19 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream21 = new org.apache.commons.codec.binary.Base16InputStream(inputStream19, false);
org.apache.commons.codec.binary.Base32InputStream base32InputStream22 = new org.apache.commons.codec.binary.Base32InputStream(inputStream19);
boolean boolean23 = base32InputStream22.markSupported();
org.apache.commons.codec.CodecPolicy codecPolicy26 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base16InputStream base16InputStream27 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream22, false, false, codecPolicy26);
org.apache.commons.codec.binary.Base16InputStream base16InputStream28 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15, false, false, codecPolicy26);
org.apache.commons.codec.binary.Base32InputStream base32InputStream30 = new org.apache.commons.codec.binary.Base32InputStream((java.io.InputStream)base32InputStream15, true);
org.apache.commons.codec.binary.Base16InputStream base16InputStream32 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream15, false);
java.nio.charset.Charset charset35 = org.apache.commons.codec.Charsets.ISO_8859_1;
java.io.OutputStream outputStream36 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream37 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream36);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream40 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream37, true, false);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream41 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream40);
byte[] byteArray46 = new byte[] { (byte)1 };
java.lang.String str47 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray46);
java.lang.String str48 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray46);
boolean boolean49 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray46);
org.apache.commons.codec.binary.Base64 base64_51 = new org.apache.commons.codec.binary.Base64(1, byteArray46, true);
java.io.InputStream inputStream52 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream54 = new org.apache.commons.codec.binary.Base16InputStream(inputStream52, false);
java.security.MessageDigest messageDigest58 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils59 = new org.apache.commons.codec.digest.DigestUtils(messageDigest58);
java.security.MessageDigest messageDigest60 = digestUtils59.getMessageDigest();
java.security.MessageDigest messageDigest61 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest60);
byte[] byteArray64 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest65 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest60, byteArray64);
org.apache.commons.codec.CodecPolicy codecPolicy66 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream67 = new org.apache.commons.codec.binary.Base32InputStream(inputStream52, false, 0, byteArray64, codecPolicy66);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream68 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream40, false, (int)'-', byteArray46, codecPolicy66);
org.apache.commons.codec.net.BCodec bCodec69 = new org.apache.commons.codec.net.BCodec(charset35, codecPolicy66);
org.apache.commons.codec.binary.Base16InputStream base16InputStream70 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base16InputStream32, false, false, codecPolicy66);
org.apache.commons.codec.binary.Base32InputStream base32InputStream71 = new org.apache.commons.codec.binary.Base32InputStream((java.io.InputStream)base16InputStream32);
byte[] byteArray72 = org.apache.commons.codec.digest.DigestUtils.sha1((java.io.InputStream) base16InputStream32);


Progress update: steps=34868, test inputs generated=30458, failing inputs=6      (2025-03-14T11:10:12.198Z     3.29G used)
Progress update: steps=35000, test inputs generated=30570, failing inputs=6      (2025-03-14T11:10:25.864Z     3.48G used)Long generation time 1800 msec (= 1797 + 2) for
org.apache.commons.codec.digest.HmacAlgorithms hmacAlgorithms0 = org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_224;
byte[] byteArray2 = new byte[] { (byte)1 };
java.lang.String str3 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray2);
java.lang.String str4 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray2);
java.math.BigInteger bigInteger5 = org.apache.commons.codec.binary.Base64.decodeInteger(byteArray2);
org.apache.commons.codec.digest.HmacUtils hmacUtils6 = new org.apache.commons.codec.digest.HmacUtils(hmacAlgorithms0, byteArray2);
java.lang.String str7 = hmacAlgorithms0.getName();
org.apache.commons.codec.digest.HmacUtils hmacUtils9 = new org.apache.commons.codec.digest.HmacUtils(hmacAlgorithms0, "0164");
org.apache.commons.codec.binary.Base32 base32_11 = new org.apache.commons.codec.binary.Base32(false);
java.io.OutputStream outputStream12 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream13 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream12);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream16 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream13, true, false);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream19 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream16, true, true);
byte[] byteArray24 = new byte[] { (byte)1 };
java.lang.String str25 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray24);
java.lang.String str26 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray24);
boolean boolean27 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray24);
org.apache.commons.codec.binary.Base64 base64_29 = new org.apache.commons.codec.binary.Base64(1, byteArray24, true);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream30 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream16, false, (-237789309), byteArray24);
java.lang.String str31 = base32_11.encodeAsString(byteArray24);
java.lang.String str32 = org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byteArray24);
byte[] byteArray33 = hmacUtils9.hmac(byteArray24);
org.apache.commons.codec.digest.HmacAlgorithms hmacAlgorithms34 = org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_224;
org.apache.commons.codec.digest.HmacUtils hmacUtils36 = new org.apache.commons.codec.digest.HmacUtils(hmacAlgorithms34, "AQ==");
org.apache.commons.codec.binary.Hex hex37 = new org.apache.commons.codec.binary.Hex();
java.nio.ByteBuffer byteBuffer39 = org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8("SHA-224");
byte[] byteArray40 = hex37.encode(byteBuffer39);
char[] charArray41 = org.apache.commons.codec.binary.Hex.encodeHex(byteBuffer39);
java.lang.String str42 = hmacUtils36.hmacHex(byteBuffer39);
char[] charArray44 = org.apache.commons.codec.binary.Hex.encodeHex(byteBuffer39, true);
byte[] byteArray45 = hmacUtils9.hmac(byteBuffer39);
java.lang.String str47 = hmacUtils9.hmacHex("");
java.io.InputStream inputStream48 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream50 = new org.apache.commons.codec.binary.Base16InputStream(inputStream48, false);
java.security.MessageDigest messageDigest54 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils55 = new org.apache.commons.codec.digest.DigestUtils(messageDigest54);
java.security.MessageDigest messageDigest56 = digestUtils55.getMessageDigest();
java.security.MessageDigest messageDigest57 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest56);
byte[] byteArray60 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest61 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest56, byteArray60);
org.apache.commons.codec.CodecPolicy codecPolicy62 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream63 = new org.apache.commons.codec.binary.Base32InputStream(inputStream48, false, 0, byteArray60, codecPolicy62);
org.apache.commons.codec.binary.Base32InputStream base32InputStream64 = new org.apache.commons.codec.binary.Base32InputStream((java.io.InputStream)base32InputStream63);
java.lang.String str65 = hmacUtils9.hmacHex((java.io.InputStream) base32InputStream64);


Progress update: steps=35350, test inputs generated=30865, failing inputs=6      (2025-03-14T11:11:12.634Z     3.29G used)
Progress update: steps=35920, test inputs generated=31355, failing inputs=6      (2025-03-14T11:12:12.749Z     3.41G used)
Progress update: steps=36000, test inputs generated=31431, failing inputs=6      (2025-03-14T11:12:18.549Z     3.50G used)
Progress update: steps=36581, test inputs generated=31922, failing inputs=6      (2025-03-14T11:13:12.762Z     3.34G used)
Progress update: steps=37000, test inputs generated=32280, failing inputs=6      (2025-03-14T11:13:55.207Z     3.35G used)
Progress update: steps=37192, test inputs generated=32448, failing inputs=6      (2025-03-14T11:14:12.802Z     3.33G used)
Progress update: steps=37696, test inputs generated=32872, failing inputs=6      (2025-03-14T11:15:14.626Z     3.33G used)
Progress update: steps=38000, test inputs generated=33127, failing inputs=6      (2025-03-14T11:15:52.465Z     3.35G used)
Progress update: steps=38160, test inputs generated=33264, failing inputs=6      (2025-03-14T11:16:15.733Z     3.33G used)
Progress update: steps=38602, test inputs generated=33641, failing inputs=6      (2025-03-14T11:17:16.211Z     3.34G used)
Progress update: steps=38997, test inputs generated=33981, failing inputs=6      (2025-03-14T11:18:16.270Z     3.54G used)
Progress update: steps=39000, test inputs generated=33984, failing inputs=6      (2025-03-14T11:18:18.055Z     3.37G used)
Progress update: steps=39498, test inputs generated=34410, failing inputs=6      (2025-03-14T11:19:17.617Z     3.35G used)
Progress update: steps=39908, test inputs generated=34761, failing inputs=6      (2025-03-14T11:20:17.812Z     3.35G used)
Progress update: steps=40000, test inputs generated=34829, failing inputs=6      (2025-03-14T11:20:29.181Z     3.45G used)
Progress update: steps=40397, test inputs generated=35159, failing inputs=6      (2025-03-14T11:21:17.847Z     3.51G used)
Progress update: steps=40763, test inputs generated=35461, failing inputs=6      (2025-03-14T11:22:17.980Z     4.30G used)Long execution time 16 sec for
org.apache.commons.codec.net.QuotedPrintableCodec quotedPrintableCodec0 = new org.apache.commons.codec.net.QuotedPrintableCodec();
java.nio.charset.Charset charset1 = quotedPrintableCodec0.getCharset();
byte[] byteArray3 = new byte[] { (byte)1 };
java.lang.String str4 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray3);
java.lang.String str5 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray3);
java.lang.String str6 = org.apache.commons.codec.digest.DigestUtils.sha384Hex(byteArray3);
java.lang.Object obj7 = quotedPrintableCodec0.decode((java.lang.Object) byteArray3);
java.lang.String str8 = org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byteArray3);
org.apache.commons.codec.digest.Blake3 blake3_9 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray3);
org.apache.commons.codec.net.URLCodec uRLCodec11 = new org.apache.commons.codec.net.URLCodec("75d2717e92ca50007adfa3c9deba2e6f");
java.lang.String str12 = uRLCodec11.getEncoding();
java.util.BitSet bitSet13 = null;
byte[] byteArray14 = org.apache.commons.codec.binary.BaseNCodec.getChunkSeparator();
byte[] byteArray15 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray14);
byte[] byteArray16 = org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(bitSet13, byteArray14);
byte[] byteArray17 = uRLCodec11.decode(byteArray16);
org.apache.commons.codec.digest.Blake3 blake3_18 = blake3_9.doFinalize(byteArray16);
byte[] byteArray20 = blake3_9.doFinalize(941091044);

Long generation time 1000 msec (= 1000 + 0) for
org.apache.commons.codec.language.DaitchMokotoffSoundex daitchMokotoffSoundex1 = new org.apache.commons.codec.language.DaitchMokotoffSoundex(false);
java.lang.String str3 = daitchMokotoffSoundex1.soundex("UTF-16BE");
java.lang.String str5 = daitchMokotoffSoundex1.encode("efea060da552594ec0fa570e0fabfbade6629ee752fdbba7c297aab433b0ad41e692375a40b6b857fe4adee93a6b751b3ef1d8a4509a89d01247c4b7e6ee936a");
java.io.InputStream inputStream6 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream8 = new org.apache.commons.codec.binary.Base16InputStream(inputStream6, false);
java.security.MessageDigest messageDigest12 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils13 = new org.apache.commons.codec.digest.DigestUtils(messageDigest12);
java.security.MessageDigest messageDigest14 = digestUtils13.getMessageDigest();
java.security.MessageDigest messageDigest15 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest14);
byte[] byteArray18 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest19 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest14, byteArray18);
org.apache.commons.codec.CodecPolicy codecPolicy20 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream21 = new org.apache.commons.codec.binary.Base32InputStream(inputStream6, false, 0, byteArray18, codecPolicy20);
org.apache.commons.codec.binary.Base16InputStream base16InputStream22 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream21);
java.io.InputStream inputStream25 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream27 = new org.apache.commons.codec.binary.Base16InputStream(inputStream25, false);
org.apache.commons.codec.binary.Base32InputStream base32InputStream28 = new org.apache.commons.codec.binary.Base32InputStream(inputStream25);
boolean boolean29 = base32InputStream28.markSupported();
org.apache.commons.codec.CodecPolicy codecPolicy32 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base16InputStream base16InputStream33 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream28, false, false, codecPolicy32);
org.apache.commons.codec.binary.Base16InputStream base16InputStream34 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream21, false, false, codecPolicy32);
org.apache.commons.codec.binary.Base16InputStream base16InputStream36 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream21, false);
org.apache.commons.codec.binary.Base32InputStream base32InputStream38 = new org.apache.commons.codec.binary.Base32InputStream((java.io.InputStream)base16InputStream36, true);
org.apache.commons.codec.binary.Base64InputStream base64InputStream40 = new org.apache.commons.codec.binary.Base64InputStream((java.io.InputStream)base16InputStream36, true);
org.apache.commons.codec.binary.Base32InputStream base32InputStream42 = new org.apache.commons.codec.binary.Base32InputStream((java.io.InputStream)base16InputStream36, true);
org.apache.commons.codec.binary.Base16InputStream base16InputStream43 = new org.apache.commons.codec.binary.Base16InputStream((java.io.InputStream)base32InputStream42);
java.lang.Object obj44 = daitchMokotoffSoundex1.encode((java.lang.Object) base32InputStream42);


Progress update: steps=41000, test inputs generated=35662, failing inputs=6      (2025-03-14T11:22:55.352Z     3.40G used)
Progress update: steps=41203, test inputs generated=35840, failing inputs=6      (2025-03-14T11:23:18.918Z     3.37G used)
Progress update: steps=41633, test inputs generated=36208, failing inputs=6      (2025-03-14T11:24:19.369Z     3.37G used)Long execution time 12 sec for
byte[] byteArray1 = new byte[] { (byte)1 };
java.lang.String str2 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray1);
org.apache.commons.codec.digest.Blake3 blake3_3 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray1);
byte[] byteArray6 = new byte[] { (byte)1 };
java.lang.String str7 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray6);
org.apache.commons.codec.binary.Base64 base64_9 = new org.apache.commons.codec.binary.Base64((int)(byte)-1, byteArray6, true);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_3.doFinalize(byteArray6);
byte[] byteArray13 = org.apache.commons.codec.digest.HmacUtils.hmacSha384("5348412d323234", "$apr1$MAizISPO$3ZF5IN1Lnxvwx9keK/mm/.");
byte[] byteArray15 = org.apache.commons.codec.digest.DigestUtils.sha1("ALL");
byte[] byteArray16 = org.apache.commons.codec.digest.HmacUtils.hmacMd5(byteArray13, byteArray15);
long[] longArray17 = org.apache.commons.codec.digest.MurmurHash3.hash128x64(byteArray15);
org.apache.commons.codec.digest.Blake3 blake3_18 = blake3_3.update(byteArray15);
org.apache.commons.codec.binary.Base64 base64_20 = new org.apache.commons.codec.binary.Base64(0);
boolean boolean22 = base64_20.isInAlphabet("");
byte[] byteArray24 = base64_20.decode("fd81180b63f8f5d152b88eed999f7909");
org.apache.commons.codec.digest.Blake3 blake3_25 = blake3_3.doFinalize(byteArray24);
byte[] byteArray27 = blake3_25.doFinalize(793321570);


Progress update: steps=42000, test inputs generated=36524, failing inputs=6      (2025-03-14T11:25:05.871Z     3.48G used)
Progress update: steps=42100, test inputs generated=36601, failing inputs=6      (2025-03-14T11:25:19.447Z     3.51G used)
Progress update: steps=42577, test inputs generated=37008, failing inputs=6      (2025-03-14T11:26:19.850Z     3.39G used)
Progress update: steps=43000, test inputs generated=37361, failing inputs=6      (2025-03-14T11:27:05.769Z     3.54G used)
Progress update: steps=43210, test inputs generated=37534, failing inputs=6      (2025-03-14T11:27:20.359Z     3.40G used)
Progress update: steps=43500, test inputs generated=37782, failing inputs=6      (2025-03-14T11:28:20.393Z     3.59G used)
Progress update: steps=43949, test inputs generated=38148, failing inputs=6      (2025-03-14T11:29:20.413Z     3.51G used)
Progress update: steps=44000, test inputs generated=38191, failing inputs=6      (2025-03-14T11:29:25.405Z     3.44G used)
Progress update: steps=44442, test inputs generated=38580, failing inputs=6      (2025-03-14T11:30:20.974Z     3.42G used)
Progress update: steps=44899, test inputs generated=38979, failing inputs=6      (2025-03-14T11:31:21.045Z     3.52G used)
Progress update: steps=45000, test inputs generated=39063, failing inputs=6      (2025-03-14T11:31:34.406Z     3.55G used)
Progress update: steps=45311, test inputs generated=39329, failing inputs=6      (2025-03-14T11:32:21.059Z     3.60G used)
Progress update: steps=45623, test inputs generated=39576, failing inputs=6      (2025-03-14T11:33:21.070Z     3.43G used)
Progress update: steps=46000, test inputs generated=39897, failing inputs=6      (2025-03-14T11:34:16.610Z     3.48G used)
Progress update: steps=46021, test inputs generated=39917, failing inputs=6      (2025-03-14T11:34:21.153Z     3.57G used)
Progress update: steps=46442, test inputs generated=40281, failing inputs=6      (2025-03-14T11:35:21.163Z     3.44G used)
Progress update: steps=46784, test inputs generated=40574, failing inputs=6      (2025-03-14T11:36:21.291Z     3.44G used)Long execution time 18 sec for
java.util.BitSet bitSet0 = null;
byte[] byteArray2 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str3 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray2);
byte[] byteArray4 = org.apache.commons.codec.net.URLCodec.encodeUrl(bitSet0, byteArray2);
byte[] byteArray6 = org.apache.commons.codec.binary.StringUtils.getBytesUtf8("6156665843a7281afec331f09b0ef309");
java.lang.String str7 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray6);
byte[] byteArray8 = org.apache.commons.codec.digest.HmacUtils.hmacSha256(byteArray2, byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_9 = org.apache.commons.codec.digest.Blake3.initKeyedHash(byteArray6);
org.apache.commons.codec.digest.Blake3 blake3_10 = blake3_9.reset();
org.apache.commons.codec.digest.Blake3 blake3_11 = blake3_10.reset();
org.apache.commons.codec.digest.Blake3 blake3_12 = blake3_11.reset();
byte[] byteArray14 = blake3_11.doFinalize((int) (short)100);
org.apache.commons.codec.binary.Base32.Builder builder15 = new org.apache.commons.codec.binary.Base32.Builder();
byte[] byteArray17 = org.apache.commons.codec.digest.DigestUtils.sha512("$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/");
boolean boolean18 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray17);
byte[] byteArray19 = org.apache.commons.codec.digest.Blake3.hash(byteArray17);
org.apache.commons.codec.binary.Base32.Builder builder20 = builder15.setEncodeTable(byteArray19);
org.apache.commons.codec.binary.Base32.Builder builder22 = builder20.setPadding((byte)0);
byte[] byteArray24 = new byte[] { (byte)1 };
java.lang.String str25 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray24);
java.lang.String str26 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray24);
byte[] byteArray27 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray24);
byte[] byteArray30 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray27, false, true);
org.apache.commons.codec.binary.Base32.Builder builder31 = builder22.setEncodeTable(byteArray27);
byte[] byteArray32 = org.apache.commons.codec.binary.BaseNCodec.getChunkSeparator();
byte[] byteArray33 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray32);
org.apache.commons.codec.binary.Base32.Builder builder34 = builder31.setLineSeparator(byteArray32);
byte[] byteArray41 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str42 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray41);
java.lang.String str43 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray41);
byte[] byteArray44 = org.apache.commons.codec.binary.Base64.decodeBase64(byteArray41);
java.lang.String str45 = org.apache.commons.codec.digest.HmacUtils.hmacMd5Hex(byteArray32, byteArray41);
byte[] byteArray48 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray41, true, true);
byte[] byteArray51 = org.apache.commons.codec.digest.HmacUtils.hmacSha512("30569d8fc50f9240b115fb797633584a76ec170f086dba7e27d720e411baef61106a54d9063ea7d0595ecf441913aa1b85602e6f89755e4ee6b3b27fc9c579d0", "af483febd5344b0fb0a69ad4a8018a69f306a1654ddfccc357701084bea61c755e44a074b751929cfe300da19c457f6bbc3d4bfc2c98632e1c7c59094242b569");
java.lang.String str52 = org.apache.commons.codec.digest.HmacUtils.hmacSha512Hex(byteArray41, byteArray51);
org.apache.commons.codec.digest.Blake3 blake3_53 = blake3_11.doFinalize(byteArray41);
byte[] byteArray55 = blake3_11.doFinalize(1035661600);


Progress update: steps=47000, test inputs generated=40759, failing inputs=6      (2025-03-14T11:37:07.685Z     3.55G used)
Progress update: steps=47088, test inputs generated=40837, failing inputs=6      (2025-03-14T11:37:21.330Z     3.45G used)
Progress update: steps=47840, test inputs generated=41476, failing inputs=6      (2025-03-14T11:38:21.419Z     3.46G used)
Progress update: steps=48000, test inputs generated=41611, failing inputs=6      (2025-03-14T11:38:31.886Z     3.53G used)
Progress update: steps=48598, test inputs generated=42134, failing inputs=6      (2025-03-14T11:39:21.469Z     3.56G used)
Progress update: steps=49000, test inputs generated=42478, failing inputs=6      (2025-03-14T11:39:59.402Z     3.50G used)
Progress update: steps=49259, test inputs generated=42690, failing inputs=6      (2025-03-14T11:40:21.479Z     3.52G used)
Progress update: steps=49760, test inputs generated=43106, failing inputs=6      (2025-03-14T11:41:22.432Z     3.48G used)
Progress update: steps=50000, test inputs generated=43311, failing inputs=6      (2025-03-14T11:41:45.098Z     3.57G used)
Progress update: steps=50369, test inputs generated=43620, failing inputs=6      (2025-03-14T11:42:22.480Z     3.62G used)
Progress update: steps=50835, test inputs generated=44022, failing inputs=6      (2025-03-14T11:43:22.969Z     3.50G used)
Progress update: steps=51000, test inputs generated=44153, failing inputs=6      (2025-03-14T11:43:37.952Z     3.62G used)
Progress update: steps=51353, test inputs generated=44459, failing inputs=6      (2025-03-14T11:44:23.060Z     3.50G used)
Progress update: steps=51957, test inputs generated=44957, failing inputs=6      (2025-03-14T11:45:23.227Z     3.51G used)
Progress update: steps=52000, test inputs generated=44994, failing inputs=6      (2025-03-14T11:45:31.456Z     3.53G used)
Progress update: steps=52470, test inputs generated=45395, failing inputs=6      (2025-03-14T11:46:23.280Z     3.55G used)
Progress update: steps=53000, test inputs generated=45843, failing inputs=6      (2025-03-14T11:47:07.771Z     3.53G used)
Progress update: steps=53192, test inputs generated=46005, failing inputs=6      (2025-03-14T11:47:23.552Z     3.53G used)
Progress update: steps=53786, test inputs generated=46509, failing inputs=6      (2025-03-14T11:48:23.860Z     3.53G used)
Progress update: steps=54000, test inputs generated=46692, failing inputs=6      (2025-03-14T11:48:48.215Z     3.57G used)
Progress update: steps=54308, test inputs generated=46959, failing inputs=6      (2025-03-14T11:49:23.890Z     3.55G used)Long execution time 11 sec for
org.apache.commons.codec.binary.Hex hex0 = new org.apache.commons.codec.binary.Hex();
java.lang.String str1 = hex0.toString();
org.apache.commons.codec.binary.Base64 base64_3 = new org.apache.commons.codec.binary.Base64(0);
byte[] byteArray5 = new byte[] { (byte)1 };
java.lang.String str6 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray5);
boolean boolean8 = base64_3.isInAlphabet(byteArray5, false);
byte[] byteArray10 = new byte[] { (byte)1 };
java.lang.String str11 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray10);
java.lang.String str12 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray10);
java.lang.String str13 = org.apache.commons.codec.digest.DigestUtils.sha384Hex(byteArray10);
byte[] byteArray14 = base64_3.encode(byteArray10);
java.lang.Object obj15 = hex0.encode((java.lang.Object) byteArray14);
java.nio.charset.Charset charset16 = hex0.getCharset();
java.security.MessageDigest messageDigest17 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils18 = new org.apache.commons.codec.digest.DigestUtils(messageDigest17);
java.security.MessageDigest messageDigest19 = digestUtils18.getMessageDigest();
byte[] byteArray21 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le("8d2ce87d86f55fcfab770a047b090da23270fa206832dfea7e0c946fff451f819add242374be551b0d6318ed6c7d41d8");
byte[] byteArray22 = digestUtils18.digest(byteArray21);
org.apache.commons.codec.binary.Hex hex23 = new org.apache.commons.codec.binary.Hex();
java.nio.ByteBuffer byteBuffer25 = org.apache.commons.codec.binary.StringUtils.getByteBufferUtf8("SHA-224");
byte[] byteArray26 = hex23.encode(byteBuffer25);
java.lang.String str27 = digestUtils18.digestAsHex(byteBuffer25);
byte[] byteArray28 = hex0.encode(byteBuffer25);
org.apache.commons.codec.digest.Blake3 blake3_29 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray28);
org.apache.commons.codec.digest.Blake3 blake3_30 = blake3_29.reset();
byte[] byteArray32 = blake3_29.doFinalize(940417973);


Progress update: steps=54804, test inputs generated=47371, failing inputs=6      (2025-03-14T11:50:23.909Z     3.62G used)
Progress update: steps=55000, test inputs generated=47535, failing inputs=6      (2025-03-14T11:50:42.489Z     3.58G used)
Progress update: steps=55410, test inputs generated=47874, failing inputs=6      (2025-03-14T11:51:23.919Z     3.56G used)
Progress update: steps=55922, test inputs generated=48300, failing inputs=6      (2025-03-14T11:52:23.969Z     3.56G used)
Progress update: steps=56000, test inputs generated=48365, failing inputs=6      (2025-03-14T11:52:31.960Z     3.58G used)
Progress update: steps=56287, test inputs generated=48616, failing inputs=6      (2025-03-14T11:53:23.987Z     3.61G used)
Progress update: steps=56618, test inputs generated=48902, failing inputs=6      (2025-03-14T11:54:23.994Z     3.60G used)
Progress update: steps=57000, test inputs generated=49219, failing inputs=6      (2025-03-14T11:55:14.582Z     3.59G used)
Progress update: steps=57063, test inputs generated=49272, failing inputs=6      (2025-03-14T11:55:24.257Z     3.58G used)
Progress update: steps=57368, test inputs generated=49539, failing inputs=6      (2025-03-14T11:56:24.385Z     3.58G used)
Progress update: steps=57689, test inputs generated=49812, failing inputs=6      (2025-03-14T11:57:24.416Z     3.59G used)Long generation time 1078 msec (= 1072 + 5) for
java.security.MessageDigest messageDigest0 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils1 = new org.apache.commons.codec.digest.DigestUtils(messageDigest0);
java.security.MessageDigest messageDigest2 = digestUtils1.getMessageDigest();
java.security.MessageDigest messageDigest3 = digestUtils1.getMessageDigest();
java.security.MessageDigest messageDigest4 = digestUtils1.getMessageDigest();
java.security.MessageDigest messageDigest5 = digestUtils1.getMessageDigest();
java.security.MessageDigest messageDigest6 = digestUtils1.getMessageDigest();
org.apache.commons.codec.net.QuotedPrintableCodec quotedPrintableCodec7 = new org.apache.commons.codec.net.QuotedPrintableCodec();
byte[] byteArray14 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str15 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray14);
java.lang.String str16 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray14);
int int17 = org.apache.commons.codec.digest.MurmurHash3.hash32x86(byteArray14);
byte[] byteArray18 = quotedPrintableCodec7.encode(byteArray14);
java.lang.String str19 = org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byteArray14);
java.lang.String str20 = digestUtils1.digestAsHex(byteArray14);
byte[] byteArray22 = org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be("UTF-8");
java.lang.String str23 = org.apache.commons.codec.digest.DigestUtils.md2Hex(byteArray22);
int int27 = org.apache.commons.codec.digest.MurmurHash3.hash32(byteArray22, 1267073781, 0, 57536142);
java.lang.String str28 = digestUtils1.digestAsHex(byteArray22);
byte[] byteArray30 = digestUtils1.digest("=?UTF-8?Q?NwCvhpxP0MvyM?=");


Progress update: steps=57895, test inputs generated=49990, failing inputs=6      (2025-03-14T11:58:24.434Z     3.62G used)
Progress update: steps=58000, test inputs generated=50078, failing inputs=6      (2025-03-14T11:59:03.127Z     3.63G used)
Progress update: steps=58092, test inputs generated=50156, failing inputs=6      (2025-03-14T11:59:24.650Z     3.59G used)
Progress update: steps=58327, test inputs generated=50352, failing inputs=6      (2025-03-14T12:00:24.700Z     3.60G used)
Progress update: steps=58556, test inputs generated=50547, failing inputs=6      (2025-03-14T12:01:25.087Z     3.60G used)
Progress update: steps=58841, test inputs generated=50791, failing inputs=6      (2025-03-14T12:02:25.131Z     3.60G used)
Progress update: steps=59000, test inputs generated=50924, failing inputs=6      (2025-03-14T12:03:05.893Z     3.63G used)
Progress update: steps=59091, test inputs generated=50995, failing inputs=6      (2025-03-14T12:03:25.178Z     3.60G used)
Progress update: steps=59266, test inputs generated=51146, failing inputs=6      (2025-03-14T12:04:25.539Z     3.60G used)
Progress update: steps=59429, test inputs generated=51283, failing inputs=6      (2025-03-14T12:05:25.575Z     3.61G used)
Progress update: steps=59566, test inputs generated=51396, failing inputs=6      (2025-03-14T12:06:25.656Z     3.61G used)Long execution time 22 sec for
org.apache.commons.codec.binary.Base32 base32_2 = new org.apache.commons.codec.binary.Base32(true, (byte)0);
org.apache.commons.codec.binary.Base32.Builder builder3 = new org.apache.commons.codec.binary.Base32.Builder();
byte[] byteArray5 = org.apache.commons.codec.digest.DigestUtils.sha512("$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/");
boolean boolean6 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray5);
byte[] byteArray7 = org.apache.commons.codec.digest.Blake3.hash(byteArray5);
org.apache.commons.codec.binary.Base32.Builder builder8 = builder3.setEncodeTable(byteArray7);
org.apache.commons.codec.binary.Base32.Builder builder10 = builder3.setLineLength((int) (byte)0);
org.apache.commons.codec.binary.Base32.Builder builder11 = new org.apache.commons.codec.binary.Base32.Builder();
byte[] byteArray13 = org.apache.commons.codec.digest.DigestUtils.sha512("$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/");
boolean boolean14 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray13);
byte[] byteArray15 = org.apache.commons.codec.digest.Blake3.hash(byteArray13);
org.apache.commons.codec.binary.Base32.Builder builder16 = builder11.setEncodeTable(byteArray15);
org.apache.commons.codec.binary.Base32.Builder builder18 = builder16.setPadding((byte)0);
org.apache.commons.codec.binary.Base64.Builder builder19 = org.apache.commons.codec.binary.Base64.builder();
byte[] byteArray23 = new byte[] { (byte)1 };
java.lang.String str24 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray23);
java.lang.String str25 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray23);
byte[] byteArray26 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray23);
byte[] byteArray27 = org.apache.commons.codec.digest.DigestUtils.sha(byteArray23);
org.apache.commons.codec.binary.Base64 base64_29 = new org.apache.commons.codec.binary.Base64(2131247126, byteArray23, true);
byte[] byteArray31 = base64_29.decode("");
java.nio.charset.Charset charset34 = org.apache.commons.codec.Charsets.ISO_8859_1;
java.io.OutputStream outputStream35 = null;
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream36 = new org.apache.commons.codec.binary.Base16OutputStream(outputStream35);
org.apache.commons.codec.binary.Base16OutputStream base16OutputStream39 = new org.apache.commons.codec.binary.Base16OutputStream((java.io.OutputStream)base16OutputStream36, true, false);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream40 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream39);
byte[] byteArray45 = new byte[] { (byte)1 };
java.lang.String str46 = org.apache.commons.codec.binary.Base64.encodeBase64String(byteArray45);
java.lang.String str47 = org.apache.commons.codec.digest.DigestUtils.sha512Hex(byteArray45);
boolean boolean48 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray45);
org.apache.commons.codec.binary.Base64 base64_50 = new org.apache.commons.codec.binary.Base64(1, byteArray45, true);
java.io.InputStream inputStream51 = null;
org.apache.commons.codec.binary.Base16InputStream base16InputStream53 = new org.apache.commons.codec.binary.Base16InputStream(inputStream51, false);
java.security.MessageDigest messageDigest57 = org.apache.commons.codec.digest.DigestUtils.getSha512Digest();
org.apache.commons.codec.digest.DigestUtils digestUtils58 = new org.apache.commons.codec.digest.DigestUtils(messageDigest57);
java.security.MessageDigest messageDigest59 = digestUtils58.getMessageDigest();
java.security.MessageDigest messageDigest60 = org.apache.commons.codec.digest.DigestUtils.getDigest("6156665843a7281afec331f09b0ef309", messageDigest59);
byte[] byteArray63 = org.apache.commons.codec.digest.HmacUtils.hmacSha1("UTF-8", "7b54b66836c1fbdd13d2441d9e1434dc62ca677fb68f5fe66a464baadecdbd00576f8d6b5ac3bcc80844b7d50b1cc6603444bbe7cfcf8fc0aa1ee3c636d9e339");
java.security.MessageDigest messageDigest64 = org.apache.commons.codec.digest.DigestUtils.updateDigest(messageDigest59, byteArray63);
org.apache.commons.codec.CodecPolicy codecPolicy65 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32InputStream base32InputStream66 = new org.apache.commons.codec.binary.Base32InputStream(inputStream51, false, 0, byteArray63, codecPolicy65);
org.apache.commons.codec.binary.Base32OutputStream base32OutputStream67 = new org.apache.commons.codec.binary.Base32OutputStream((java.io.OutputStream)base16OutputStream39, false, (int)'-', byteArray45, codecPolicy65);
org.apache.commons.codec.net.BCodec bCodec68 = new org.apache.commons.codec.net.BCodec(charset34, codecPolicy65);
org.apache.commons.codec.binary.Base32 base32_69 = new org.apache.commons.codec.binary.Base32(1, byteArray31, false, (byte)0, codecPolicy65);
org.apache.commons.codec.binary.Base64.Builder builder70 = builder19.setDecodingPolicy(codecPolicy65);
org.apache.commons.codec.binary.Base32.Builder builder71 = builder18.setDecodingPolicy(codecPolicy65);
org.apache.commons.codec.binary.Base32.Builder builder72 = builder3.setDecodingPolicy(codecPolicy65);
org.apache.commons.codec.binary.Base32.Builder builder74 = builder3.setPadding((byte)-1);
org.apache.commons.codec.CodecPolicy codecPolicy75 = org.apache.commons.codec.CodecPolicy.LENIENT;
org.apache.commons.codec.binary.Base32.Builder builder76 = builder3.setDecodingPolicy(codecPolicy75);
byte[] byteArray83 = new byte[] { (byte)1, (byte)100, (byte)100, (byte)1, (byte)0, (byte)0 };
java.lang.String str84 = org.apache.commons.codec.binary.StringUtils.newStringIso8859_1(byteArray83);
java.lang.String str85 = org.apache.commons.codec.digest.DigestUtils.sha256Hex(byteArray83);
byte[] byteArray86 = org.apache.commons.codec.binary.BinaryCodec.fromAscii(byteArray83);
char[] charArray87 = org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byteArray83);
byte[] byteArray88 = org.apache.commons.codec.binary.Base64.encodeBase64(byteArray83);
byte[] byteArray89 = org.apache.commons.codec.digest.DigestUtils.md5(byteArray88);
org.apache.commons.codec.binary.Base32.Builder builder90 = builder3.setEncodeTable(byteArray88);
byte[] byteArray91 = org.apache.commons.codec.digest.Blake3.hash(byteArray88);
java.lang.String str93 = org.apache.commons.codec.binary.Hex.encodeHexString(byteArray91, false);
long long94 = base32_2.getEncodedLength(byteArray91);
org.apache.commons.codec.digest.Blake3 blake3_95 = org.apache.commons.codec.digest.Blake3.initKeyedHash(byteArray91);
byte[] byteArray97 = blake3_95.doFinalize(827814364);


Progress update: steps=59658, test inputs generated=51470, failing inputs=6      (2025-03-14T12:07:25.682Z     3.62G used)
Progress update: steps=59764, test inputs generated=51557, failing inputs=6      (2025-03-14T12:08:25.776Z     4.75G used)Long execution time 28 sec for
org.apache.commons.codec.binary.Base64.Builder builder0 = new org.apache.commons.codec.binary.Base64.Builder();
org.apache.commons.codec.binary.Base64.Builder builder2 = builder0.setUrlSafe(false);
org.apache.commons.codec.binary.Base64 base64_3 = builder2.get();
org.apache.commons.codec.binary.Base32.Builder builder4 = new org.apache.commons.codec.binary.Base32.Builder();
byte[] byteArray6 = org.apache.commons.codec.digest.DigestUtils.sha512("$6$dIgVQYtk$qvP1lf/28.P1smhlwbKfnF5P2Bge8OdpoOy/ropptfgoICB0MnrKj0A5OwEu6bXqnX.ERRw9LL4DQZB8O0GId/");
boolean boolean7 = org.apache.commons.codec.binary.Base64.isArrayByteBase64(byteArray6);
byte[] byteArray8 = org.apache.commons.codec.digest.Blake3.hash(byteArray6);
org.apache.commons.codec.binary.Base32.Builder builder9 = builder4.setEncodeTable(byteArray8);
byte[] byteArray10 = new byte[] {  };
int int11 = org.apache.commons.codec.digest.MurmurHash3.hash32x86(byteArray10);
java.lang.String str12 = org.apache.commons.codec.binary.StringUtils.newStringUsAscii(byteArray10);
org.apache.commons.codec.binary.Base32.Builder builder13 = builder4.setLineSeparator(byteArray10);
org.apache.commons.codec.binary.Base64.Builder builder14 = builder2.setEncodeTable(byteArray10);
org.apache.commons.codec.digest.Blake3 blake3_15 = org.apache.commons.codec.digest.Blake3.initKeyDerivationFunction(byteArray10);
byte[] byteArray17 = blake3_15.doFinalize(1139165651);


Progress update: steps=59868, test inputs generated=51644, failing inputs=6      (2025-03-14T12:09:37.447Z     3.62G used)
Normal method executions: 71256379
Exceptional method executions: 16627

Average method execution time (normal termination):      0.0100
Average method execution time (exceptional termination): 9.85
Approximate memory usage 3.62G
Explorer = ForwardGenerator(steps: 59868, null steps: 8224, num_sequences_generated: 51644;
    allSequences: 51644, regresson seqs: 44816, error seqs: 6=6=6, invalid seqs: 0, subsumed_sequences: 0, num_failed_output_test: 6822;
    sideEffectFreeMethods: 1115, runtimePrimitivesSeen: 9923)

Error-revealing test output:
Error-revealing test count: 6
Writing error-revealing JUnit tests...
Created file /Users/dianshuliao/Documents/Research/Knowledge_Distillation_for_LLM_Test_Gen/UnitTestGeneration/saved_data/TenJavaProjects/commons-codec-master/Randoop_tests_eachClass_60s/ErrorTest0.java
Created file /Users/dianshuliao/Documents/Research/Knowledge_Distillation_for_LLM_Test_Gen/UnitTestGeneration/saved_data/TenJavaProjects/commons-codec-master/Randoop_tests_eachClass_60s/ErrorTest.java
Wrote error-revealing JUnit tests.

About to look for failing assertions in 28918 regression sequences.

Regression test output:
Regression test count: 28918
Writing regression JUnit tests...
                                                                                                                                                                                                       